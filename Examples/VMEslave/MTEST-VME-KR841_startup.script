# $Source: /cvs/G/DRV/pev/Examples/VMEslave/MTEST-VME-KR841_startup.script,v $
# $Date: 2012/11/15 14:16:53 $
# $Revision: 1.1 $
# $Author: kalt_r $
#
# Original Author: KR84
# Date:            13.11.2012
#
# Important links:
#  - IFC1210 Codebeamer   https://codebeamer.psi.ch/cb/project/104
#  - IFC1210 User Guide   https://codebeamer.psi.ch/cb/doc/139156
#  - EPICS PEV driver     https://controls.web.psi.ch/cgi-bin/twiki/view/Main/IFC1210PEV100Driver
#
#
# Purpose: VME master and slave example for accessing TOSCA-II
#           * slot 1 system is VME master
#           * slot 2 and 3 systems are VME slaves
#
# Purpose of this file:
#           * startup.script for EPICS



#######################################################################
# EPICS specific environment variablees
putenv("EPICS_CA_MAX_ARRAY_BYTES=40000000" )



#######################################################################
# load EPICS specific drivers

# load regDev and pev (=TOSCA-II) drivers
require "regDev","test"
require "pev"

# for the histogram record, which is not in EPICS base for EPICS 3.14.12 / embeddedlinux-e500v2
require "histogram"

# for our genSub c-library, VMEslave since we are in G/DRV/pev/Examples/VMEslave
# and VMEslave will then be the name of our library name.
require "VMEslave"



#######################################################################
# IFC1210 USER block definition:
# define access to TOSCA-II CENTRAL FPGA ressources
# Swapping options: 0  = no     swapping
#                   WS = 16 bit swapping
#                   DS = 32 bit swapping
#                   QS = 64 bit swapping

# USER1 block of Standard_IOC project. Find details of memory map definition here:
# https://codebeamer.psi.ch/cb/proj/sources/sccFileLog.do?proj_id=104&filename=IFC%2FIFC1210_applications%2FStandard_IOC%2FDocumentation%2FStandard_IOC_concept.doc&isDir=false
# set up a data area in USER block of length 256 bytes starting at offset 256 bytes with 32-bit 
# swapping option and Asyn read-out with DMA for aai/aao bigger than 100 elements, else without DMA
#
# This area is intended to read / write single 32-bit registers using single r/w access
#
pevAsynConfigure(0,"Usr1StdIOCUserRegisters"            ,"USR1"   , 0x100   , "DS"      , 0              )
pevAsynConfigure(0,"Usr1StdIOCUserRegistersINT1"        ,"USR1"   , 0x158   , "DS"      , 1              )


# data definition in USER and SMEM
pevAsynConfigure(0,"USR_data" ,"USR1"   , 0x10000 , "DS"      , 0               )
pevConfigure(    0,"SMEM_data","SH_MEM" , 0       , "DS"      , 0 , 0x20000,   1) # use here pevConfigure since only block r/w allowed with SMEM



#######################################################################
# IFC1210 VME definition:
# since this MTEST-VME-KR841 is the slot-1 system we only have VME master and we configure
# here the access towards VME_master controller to the VME_slaves in the different slots
pevAsynConfigure(0,"VMEA32_Master_to_slot2","VME_A32",0x00100000,"2eSST320",0)
pevAsynConfigure(0,"VMEA32_Master_to_slot3","VME_A32",0x00200000,"2eSST320",0)






