# $Source: /cvs/G/DRV/pev/Examples/VMEslave/MTEST-VME-KR843_startup.script,v $
# $Date: 2012/12/13 12:58:18 $
# $Revision: 1.4 $
# $Author: kalt_r $
#
# Original Author: KR84
# Date:            13.11.2012
#
# Important links:
#  - IFC1210 Codebeamer   https://codebeamer.psi.ch/cb/project/104
#  - IFC1210 User Guide   https://codebeamer.psi.ch/cb/doc/139156
#  - EPICS PEV driver     https://controls.web.psi.ch/cgi-bin/twiki/view/Main/IFC1210PEV100Driver
#
#
# Purpose: VME master and slave example for accessing TOSCA-II
#           * slot 1 system is VME master
#           * slot 2 and 3 systems are VME slaves
#
# Purpose of this file:
#           * startup.script for EPICS



#######################################################################
# EPICS specific environment variablees
epicsEnvSet EPICS_CA_MAX_ARRAY_BYTES 40000000



#######################################################################
# load EPICS specific drivers

# load regDev and pev (=TOSCA-II) drivers
require "regDev","test"
require "pev","kalantari"




#######################################################################
# IFC1210 USER block definition:
# define access to TOSCA-II CENTRAL FPGA ressources
# Swapping options: 0  = no     swapping
#                   WS = 16 bit swapping
#                   DS = 32 bit swapping
#                   QS = 64 bit swapping

## pev[Asyn]Configure(
##    crate,
##    name,
##    resource,
##    offset,
##    vmeProtocol,
##    intrVec,
##    mapSize,
##    blockMode,
##    swap,
##    VME_DMA_packet_size)

# local data definition in SMEM
pevConfigure(    0,"SMEM_data","SH_MEM" , 0       , ""      , 0 , 0x20000,   1 , "DS")
# use here pevConfigure since only block r/w allowed with SMEM



#######################################################################
# IFC1210 VME definition:
# since this MTEST-VME-KR843 is the slot-3 system we only have to define VME-slave mapping

## VME slave window setup
## pevVmeSlaveMainConfig(addrSpace, mainBase, mainSize)
## addrSpace 	: 	"AM32" or "AM24"
## mainBase	:	start of main VME slave window
## mainSize	:	size of main VME slave window

##  pevVmeSlaveTargetConfig(slaveAddrSpace, winBase, winSize, vmeProtocol, target, targetOffset, swapping)
##
## slaveAddrSpace    :       "AM32" or "AM24"
## winBase	     :       baseOffset in main VME slave space 	     
## winSize	     :       window size
## vmeProtocol	     :       "BLT","MBLT","2eVME","2eSST160","2eSST233","2eSST320"
## target 	     :       "SH_MEM", "PCIE", "USR1/2"
## targetOffset	     :       offset in the remote target
## swapping	     :       "WS", "DS" or "QS" (NOT USED)


pevVmeSlaveMainConfig("AM32", 0x03000000, 0x01000000)
pevVmeSlaveTargetConfig("AM32", 0x000000,  0x100000, "2eSST320", "SH_MEM", 0x000000, 0)
pevVmeSlaveTargetConfig("AM32", 0x100000,  0x100000, "2eSST320", "USR1"  , 0x000000, 0)






